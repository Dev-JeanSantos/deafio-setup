package com.example.desafiosetup.adapter.output.dynamodb.entidade

import com.amazonaws.services.dynamodbv2.datamodeling.*
import com.example.desafiosetup.adapter.web.v1.request.CorrentistaTransferenciaRequest
import com.example.desafiosetup.adapter.web.v1.response.CorrentistaResponse
import com.example.desafiosetup.adapter.web.v1.response.TransferenciaResponse
import com.example.desafiosetup.aplicacao.dominio.modelo.Conta
import com.example.desafiosetup.aplicacao.dominio.modelo.Correntista
import com.example.desafiosetup.aplicacao.dominio.modelo.Status
import com.example.desafiosetup.aplicacao.servico.TransferenciaService
import java.math.BigDecimal

@DynamoDBTable(tableName = "ContaCorrente")
data class CorrentistaModel(
    @DynamoDBHashKey(attributeName = "pk")
    var pk: String = "",
    @DynamoDBRangeKey(attributeName = "sk")
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
    var sk: String? = null,
    @DynamoDBAttribute(attributeName = "nome")
    var nome: String = "",
    @DynamoDBAttribute(attributeName = "conta")
    var conta: ContaModel = ContaModel(BigDecimal.ZERO, status = Status.PENDENTE)
) {
    fun toResponse(): CorrentistaResponse {
        return CorrentistaResponse(this.nome, this.conta.numero, this.pk, this.conta.saldo)
    }

    fun toTransferenciaResponse(): TransferenciaResponse {
        return TransferenciaResponse(this.nome, this.conta.numero, this.pk, this.conta.saldo, this.conta.status)
    }

    fun toConta() = Conta(
            numeroConta = conta.numero,
            saldo = conta.saldo,
            correntista = nome
    )

    fun toModel() = Correntista(
            nome = this.nome,
            idCorrentista = this.conta.numero,
            conta = this.conta.toDomain()
    )

    fun update(contaConfirmadaTransferencia: CorrentistaModel): CorrentistaModel {

        this.apply {
            this.nome = contaConfirmadaTransferencia.nome
            this.conta.saldo = contaConfirmadaTransferencia.conta.saldo
            this.conta.numero = contaConfirmadaTransferencia.conta.numero
            this.conta.status = Status.APROVADO
            this.pk = contaConfirmadaTransferencia.conta.numero
        }
        return contaConfirmadaTransferencia
    }
}